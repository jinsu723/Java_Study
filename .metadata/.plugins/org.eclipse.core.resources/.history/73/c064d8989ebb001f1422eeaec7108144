package teamTask01;

import java.util.ArrayList;
import java.util.List;

public class UserService extends UserVO{

//	- UserService
//	회원 정보를 저장할 List를 private으로 선언한다
//	아이디 중복검사 메소드
//	회원가입 메소드
//	로그인 메소드 => 스트림 api 사용
	

	// 로직
	// List<String> 필드 선언
	private ArrayList<String> li = new ArrayList<>();  // 회원의 정보 저장할 배열
	
	// 중복된 아이디를 걸러내기 위한 아이디 풀
	static ArrayList<String> lid = new ArrayList<>();
	
	// 생성자 회원의 정보를 받아 아이디 중복 검사 실행하고 필드 초기화
	public UserService(String userNum, String id, String pw, String name, String age) {
		super(userNum, id, pw, name, age);  // 부모의 생성자 필드 초기화
		if(singIn(id)) {  // 중복된 아이디 가 없다면
			System.out.println("회원가입 성공"); // 메시지 출력
			this.li.add(getId());  // 아이디 저장
			this.li.add(getPw());  // 비밀번호 저장
			this.li.add(getName());  // 이름 저장
			this.li.add(getAge());  // 나이 저장
		} else {  // 중복된 아이디가 있다면
			System.out.println("이미 사용중인 아이디");  // 메시지 출력
			return;  // 강제종료
		}
	}
	
	public List<String> getLi(){  // 유처의 정보 출력
		return li;  // 정보 반환
	}

	
	// 아이디 중복 검사 메소드
	// boolean 매개변수 1개
	// 아이디 비교

	boolean checkID(String id) {  // 아이디 중복검사
		if(lid.contains(id)) {  // 아이디풀에 입려한 아이디가 있다면
			return false;  // false 반환 => 중복된 아이디 있음
		}
		return true;  // 중복 아이디 없음
	}
	
	// 회원가입 메소드
	boolean singIn(String id) {  // 회원가입 성공하면 결과값 반환
		if(checkID(id)) {  // 아이디 중복 검사 실행
			lid.add(id);  // 중복된 아이디 없다면 아이디 풀에 아이디 저장
			return true;  // 필드 초기화 하기 위한 true 값 반환
		} else {  // 아이디 중복검사 싫패하면
			return false;  // 필드초기화못함
		}
	}

	// 로그인 메소드
	// boolean id, pw
	// 아이디 비번 비교
	void login(String id, String pw) {  // 로그인 메소드
		if(id == this.getId()) {  // 입력받은 아이디가 객체의 아이디와 같다면
			if(pw == this.getPw()) {  // 아이디가 같고 비밀번호까지 일치한다면
				System.out.println("로그인 성공");  // 로그인 성공
			} else {  // 아이디는 맞지만 비밀번호가 틀림
				System.out.println("비밀번호 오류");  // 비밀번호 오류
			}
		} else {  // 아이디부터 틀림
			System.out.println("아이디 오류");  // 아이디 오류 
		}
		
	}
}
