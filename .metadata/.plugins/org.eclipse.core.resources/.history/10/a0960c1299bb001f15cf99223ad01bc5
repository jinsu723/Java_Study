package test01;

import java.util.ArrayList;
import java.util.Iterator;

public class UserService {
	private ArrayList<UserVO> userList = new ArrayList<>();

	// 아이디 중복 검사 메서드
	public boolean checkId(String id) {
		return userList.stream().anyMatch(user -> user.getId().equals(id));
		
	}

    public boolean checkId2(String id) {
    	for(UserVO user : userList) {
    		if(user.getId().equals(id)) {
    			return true;
    		}
    	}
    	return false;
    }    
	
	public boolean checkId3(String id) {
		Iterator<UserVO> iter = userList.iterator();
		while(iter.hasNext()) {
			UserVO user = iter.next();
			if(user.getId().equals(id)) {
				return true;
			}
		}
		return false;
	}

	// 회원가입 메서드
	public void register(UserVO user) {
		if (checkId(user.getId())) {
			System.out.println("회원가입 실패: 아이디가 중복됩니다.");
		} else {
			userList.add(user);
			System.out.println("회원가입 성공: " + user);
		}
	}

	// 로그인 메서드
	public boolean login(String id, String password) {
		return userList.stream().anyMatch(user -> user.getId().equals(id) && user.getPassword().equals(password));
	}
	
	// equals 재정의 (userNo로 동일성 판단)
//	@Override
	public boolean equals(Object obj) {
		System.out.println("함수 호출");
		if (this == obj) {  // 객체 본인이라면
			return true;  // true 반환
		}
		if (obj == null || getClass() != obj.getClass()) {  // 객체에 값이 없거나 같은 클래스가 아니라면
			return false;  // false 반환
		}
		UserVO userVO = (UserVO) obj;  // 다운캐스팅 강제형변환
		return ((UserVO)obj).getUserNo() == userVO.getUserNo();  // 객체의 userNo가 같은지를 반환
	}
}
